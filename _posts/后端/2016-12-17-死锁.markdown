---
layout: post
category: 后端
---

死锁是指两个或者两个以上的事务在执行过程中，因争夺资源而造成的一种相互等待的现象。解决死锁最简单的一种方式是超时，即当两个事务相互等待是，当一个等待时间超过设置的某一阀值时，其中一个事务进行回滚，另外一个等待的事务就能继续进行。在InnoDB存储引擎中，参数innodb_lock_wait_timeout用来设置超时时间。但若超时的事务所占权重比较大，如果事务操作更新了很多行，占用了较多的undo log,这时采用FIFO的方式就不合适啦，因为回滚这个事务的时间相对于另一个事务所占用的时间可能会很多。因此，除了超时机制，当前数据库都普遍采用wait-for graph(等待图)的方式来进行死锁检测。要求数据库报错以下两种信息:a.锁的信息链表;b.事务等待链表。通过上述链表可以构造一张图，而在这个图中若存在回路，就代表存在死锁。在wait-for graph中，事务为图中的节点。如图：

![](/assets/img/14819567625218.jpg)

如图可以发现存在回路(1,2)，因此存在死锁，这时InnoDB存储引擎选择回滚undo量最小的事务。wait-for graph的死锁检测通常采用深度优先的算法实现。 

